#!/bin/bash
# calling this program:
# deployfilenow.sh <attachment_file> <number_of_file> <cm_number> <empid>
# For Ex: deployfilenow.sh test1.txt 3 103 457
# 
# Format of input file:
# <repository_name>:<filename_with_full_path>:<revision_number>:<new_if_it_is_new>
#
# Sample content of test1.txt
# apps1:/home/apps/mike1/mike1.php:7539:
# apps1:/home/apps/mike2/mike2.php:7539:
# apps1:/home/apps/mike3/mike3.php:7539:new
#
# Table created and maintained in ODB8 dba database
# create table file_deployment (AutoID bigint not null primary key auto_increment, 
# Repository varchar(50) not null default '',
# Engineer varchar(50) not null default '',
# LogDate datetime not null default '0000-00-00 00:00:00',
# StartTime time not null default '00:00:00',
# EndTime time not null default '00:00:00',
# CMNumber varchar(20) not null default '',
# FilesCount int not null default 0,
# KEY index1 (LogDate));
#
# validating the number arguments passed
if test $# -ne 4 ; then
	echo "Usage: $0 <attachment_file> <number_of_file> <cm_number> <emp_id>"
	exit 1
fi


mmsupport="172.29.3.62:mmsupport:/home/mmsupport:mmsupport://192.168.20.94/mmsupport:copytoall"

# start dry run

#Validating second argument
if ! [[ $2 =~ ^[[:digit:]]+$ ]];
then
echo "Please give file count as interger only"
exit 1
fi

# validate the number of files
no_file=`cat $1 |wc -l`
if test $no_file -ne $2 ; then
	echo "number of files are not equal"
	exit 1
fi

# create CM Folder
cmnum=$3.$cmtime
mkdir -p /data/svnbackup/$cmdate/$cmnum
if test $? -ne 0 ; then
	echo "Not able to create the folder: /data/svnbackup/$cmdate/$cmnum"
	exit 1
fi

echo "Starting the deployment for $cmnum" >>/data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log
echo $0 $1 $2 $3 $4 >>/data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log

# validate the cluster name and svn repository name
repos_count=`cat $1 | awk -F ':' '{print $1}' | sort | uniq | wc -l`
for rname in `cat $1 | awk -F ':' '{print $1}' | sort | uniq`
do
	cat $1 | grep "^$rname:" | sort > /data/svnbackup/$cmdate/$cmnum/attached-list-$rname
done
fcount=`ls -1 /data/svnbackup/$cmdate/$cmnum/attached-list-* | wc -l`
if test $repos_count -ne $fcount ; then
	echo "some issues in the file split up: $repos_count vs $fcount"
	exit 1
fi

echo "Splitted the repositories separately. Number of repositories: $fcount" >>/data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log

# validating the revision numbers and filenames 
for fname in `ls -1 /data/svnbackup/$cmdate/$cmnum/attached-list-*`
do
missing=0
reposit=`echo $fname | awk -F '-' '{print $NF}'`
reposit_url=`echo ${!reposit} | awk -F ':' '{print $5}'`
echo "Starting the validation of revision numbers and filenames in the repository: $reposit" >>/data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log
for line in `cat $fname`		
do
	reposit=`echo "$line" | awk -F ':' '{print $1}'`
	rfname=`echo "$line" | awk -F ':' '{print $2}'`
	rver=`echo "$line" | awk -F ':' '{print $3}'`
	rnew=`echo "$line" | awk -F ':' '{print "a"$4}'`
#	rfname2=`echo $rfname | awk -F '/' '{for(i=4;i<=NF;i++){printf("/%s",$i)}printf("\n")}'`
#	mypath=`echo $rfname | awk -F '/' '{printf("%s/%s",$2,$3)}'`
	mypath=`echo ${!reposit} | awk -F ':' '{print $3}'`
	rfname2=${rfname/$mypath/}
	svn --username luser --password luser info http:$reposit_url/$rfname2@$rver >>/data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log
	if test $? -ne 0 ; then
		echo "svn revision number has not found for $rfname2:$rver" >> /data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log
		let missing=missing+1
	fi
	if [ "$rnew" != "anew" ] ; then
		echo $rfname2 >>/data/svnbackup/$cmdate/$cmnum/backup-list-$cmnum-$reposit
	fi
done
if test $missing -ne 0 ; then
	echo "$missing files are missing; Hence exiting"
	echo "Kindly validate the /data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log file for more information"
	exit 1
fi
echo "Validation of repository: $reposit completed"  >>/data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log
done

echo "Starting backup process"  >>/data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log

# taking backup
for fname in `ls -1 /data/svnbackup/$cmdate/$cmnum/backup-list-$cmnum-* 2>/dev/null`
do
	reposit=`echo $fname | awk -F '-' '{print $NF}'`
	ripadd=`echo ${!reposit} | awk -F ':' '{print $1}'`
	username=`echo ${!reposit} | awk -F ':' '{print $2}'`
	mypath=`echo ${!reposit} | awk -F ':' '{print $3}'`
	echo "Taking backup for repository: $reposit"  >>/data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log
	mkdir -p /data/svnbackup/$cmdate/$cmnum/backup/$reposit
	if test $? -ne 0 ; then
		echo "Not able to create the folder: /data/svnbackup/$cmdate/$cmnum/backup/$reposit"
		echo "Not able to create the folder: /data/svnbackup/$cmdate/$cmnum/backup/$reposit" >> /data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log
		exit 1
	fi
	cd /data/svnbackup/$cmdate/$cmnum/backup/$reposit
	rsync -avz --files-from=/data/svnbackup/$cmdate/$cmnum/backup-list-$cmnum-$reposit $username@$ripadd:$mypath . >>/data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log 2>/tmp/rsync_error_$cmnum.txt
	if test -s /tmp/rsync_error_$cmnum.txt ; then
		echo "backup is not completed properly"
		cat /tmp/rsync_error_$cmnum.txt >>/data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log
		echo "Kindly validate the /data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log file for more information"
		exit 1
	else
		echo "backup has completed successfully" >> /data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log
	fi
done

echo "Exporting required files from SVN"  >>/data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log

# export files from svn
for fname in `ls -1 /data/svnbackup/$cmdate/$cmnum/attached-list-*`
do
	missing=0
	reposit=`echo $fname | awk -F '-' '{print $NF}'`
	reposit_url=`echo ${!reposit} | awk -F ':' '{print $5}'`
	echo "Exporting repository: $reposit"  >>/data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log
	mkdir -p /data/svnbackup/$cmdate/$cmnum/deploy/$reposit
	if test $? -ne 0 ; then
		echo "Not able to create the folder: /data/svnbackup/$cmdate/$cmnum/backup/$reposit"
		echo "Not able to create the folder: /data/svnbackup/$cmdate/$cmnum/backup/$reposit" >> /data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log
		exit 1
	fi

	for line in `cat $fname`		
	do
		reposit=`echo "$line" | awk -F ':' '{print $1}'`
		rfname=`echo "$line" | awk -F ':' '{print $2}'`
		rver=`echo "$line" | awk -F ':' '{print $3}'`
#		rfname2=`echo $rfname | awk -F '/' '{for(i=4;i<=NF;i++){printf("/%s",$i)}printf("\n")}'`
#		mypath=`echo $rfname | awk -F '/' '{printf("%s/%s",$2,$3)}'`
		mypath=`echo ${!reposit} | awk -F ':' '{print $3}'`
		rfname2=${rfname/$mypath/}
		rdir=`dirname $rfname`
		mkdir -p /data/svnbackup/$cmdate/$cmnum/deploy/$reposit/$rdir/
		if test $? -ne 0 ; then
			echo "Not able to create the folder: /data/svnbackup/$cmdate/$cmnum/deploy/$reposit/$rdir/"
			echo "Not able to create the folder: /data/svnbackup/$cmdate/$cmnum/deploy/$reposit/$rdir/" >> /data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log
			exit 1
		fi
		svn --username luser --password luser export -r $rver http:$reposit_url/$rfname2 /data/svnbackup/$cmdate/$cmnum/deploy/$reposit/$rdir/  >> /data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log
		if test $? -ne 0 ; then
			echo "svn revision number has not found for $rfname:$rver" >> /data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log
			let missing=missing+1
		else
			echo "svn revison exported for $rfname:$rver" >> /data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log
		fi
		touch /data/svnbackup/$cmdate/$cmnum/deploy/$reposit/$rdir/*
		###26/FEB/2019###dos2unix -q /data/svnbackup/$cmdate/$cmnum/deploy/$reposit/$rdir/*
		find /data/svnbackup/$cmdate/$cmnum/deploy/$reposit/$rdir/ -type f -print0 | xargs -0 dos2unix -k -q
	done
	if test $missing -ne 0 ; then
		echo "$missing files are missing; Hence exiting"
		echo "Kindly validate the /data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log file for more information"
		exit 1
	fi

	echo "Deploying the files from repository: $reposit"  >>/data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log

# deploy the files
	cd /data/svnbackup/$cmdate/$cmnum/deploy/$reposit
	rusername=`echo ${!reposit} | awk -F ':' '{print $2}'`
	ripadd=`echo ${!reposit} | awk -F ':' '{print $1}'`
	mypath=`echo ${!reposit} | awk -F ':' '{print $3}'`
	rsync -rlptvz .$mypath/* $rusername@$ripadd:~/ >>/data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log 2>/tmp/rsync_deploy_$cmnum_$reposit.err
	if test -s /tmp/rsync_deploy_$cmnum_$reposit.err ; then
		echo "deployment is not completed properly"
		cat /tmp/rsync_deploy_$cmnum_$reposit.err >>/data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log
		echo "Kindly validate the /data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log file for more information"
		exit 1
	else
		echo "deployment has completed successfully for $reposit" >> /data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log
	fi

	echo "Copytoall for the repository: $reposit"  >>/data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log

# copy to all
	cd /data/svnbackup/$cmdate/$cmnum/deploy/$reposit/
	copycmd=`echo ${!reposit} | awk -F ':' '{print $6}'`
	if [ "$copycmd" = "no" ] ; then
		echo "For $rusername@$ripadd - copytoall is not required" >>/data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log
	else
		find -type f -print | sed -e "s/^./$copycmd /" > /data/svnbackup/$cmdate/$cmnum/copytoall_list_$cmnum.$reposit
		rsync -az /data/svnbackup/$cmdate/$cmnum/copytoall_list_$cmnum.$reposit $rusername@$ripadd:/tmp >>/data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log 2>/tmp/rsync_deploy_$cmnum_$reposit.err
		if test -s /tmp/rsync_error_$cmnum.txt ; then
			echo "copytoall list is not completed properly"
			cat /tmp/rsync_deploy_$cmnum_$reposit.err >>/data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log
			echo "Kindly validate the /data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log file for more information"
			exit 1
		else
			echo "copytoall list has completed successfully for $reposit" >> /data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log
		fi
		ssh $rusername@$ripadd "/bin/bash /tmp/copytoall_list_$cmnum.$reposit" >>/data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log 2>/tmp/deploytoall_$cmnum_$reposit.err
		if test -s /tmp/deploytoall_$cmnum_$reposit.err ; then
			echo "deploytoall is not completed properly"
			cat /tmp/deploytoall_$cmnum_$reposit.err >>/data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log
			echo "Kindly validate the /data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log file for more information"
			exit 1
		else
			echo "deploytoall has completed successfully for $reposit" >> /data/svnbackup/$cmdate/$cmnum/deploy_$cmnum.log
		fi
	fi
done

# logging for report purpose
endtime=`date +%H:%M:%S`
for fname in `ls -1 /data/svnbackup/$cmdate/$cmnum/attached-list-*`
do
	reposit=`echo $fname | awk -F '-' '{print $NF}'`
	fcount=`cat $fname |wc -l`
	echo "insert into file_deployment (Repository,Engineer,LogDate,StartTime,EndTime,CMNumber,FilesCount) values ('$reposit','$4',now(),'$sttime','$endtime','$cmnum',$fcount);" | mysql -umatriservices -pservices -h 172.29.23.13 dba
done

##For Email Alert##
<<disabledtemporarily
cd /data/svnbackup/$cmdate/$cmnum/deploy
find -type f |xargs ls -ltrh | awk '{print $9}' >/data/svnbackup/$cmdate/$cmnum/filedetails.${cmnum}.txt

 (
                                echo "From: sedbm@matrimony.com"
                                echo "To: tier1_support@matrimony.com"
                            ##  echo "To: sathianarayanan.sankar@matrimony.com"
                                echo "Subject: Deployed CM $3 File details"
                                echo -e  "Dear Team,\n"
                                echo -e "CM ticket number $3 is successfully deployed in the server. Kindly find the file details below.\n"
                                echo -e "Deployed files : \n"
                                cat /data/svnbackup/$cmdate/$cmnum/filedetails.${cmnum}.txt
                                echo ""
                                echo -e "Total number of files : $2 \n"
                                echo -e "CM Ticket Number      : $3 \n"
                                echo -e "Deployed Engineer ID  : $4 \n"
                                echo -e  "\nRegards,\nSEDBM Team"
                        ) | /usr/sbin/sendmail -t
disabledtemporarily
